#version 400 core

layout(vertices = 3) out;

in vec<3> v_pos[];      // pixel view space position
in vec2 v_texcoord[]; // texture coords
in vec<3> v_normal[];   // normal
in vec<3> v_tangent[];

out vec<3> tc_pos[];
out vec2 tc_texcoord[];
out vec<3> tc_normal[];
out vec<3> tc_tangent[];
out vec<3> tc_binormal[];
out float tc_displacement_weight[];

uniform float TessLevelInner;
uniform float TessLevelOuter;

#define ID gl_InvocationID

void main()
{
    tc_pos[ID]      = v_pos[ID];
	tc_texcoord[ID] = v_texcoord[ID];
    tc_normal[ID]   = v_normal[ID];
	tc_tangent[ID]  = v_tangent[ID];

    //if (ID == 0.0)
    {
        gl_TessLevelInner[0] = TessLevelInner;
        gl_TessLevelOuter[0] = TessLevelOuter;
        gl_TessLevelOuter[1] = TessLevelOuter;
        gl_TessLevelOuter[2] = TessLevelOuter;
    }
}
